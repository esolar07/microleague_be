// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum SportType {
  BASKETBALL
  BASEBALL
  FOOTBALL
}

model Sports {
  id  Int @id @default(autoincrement())
  name  String @unique
  MatchUp MatchUp[]
}

model MatchUp {
  id  Int  @id @default(autoincrement())
  sportId Int
  sport Sports @relation(fields: [sportId], references: [id])
  homeTeamSeason String
  homeTeamName String
  awayTeamSeason String
  awayTeamName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  MatchUpResult MatchUpResult[]
  @@index([sportId])
}

model MatchUpResult {
  id Int @id @default(autoincrement())
  matchUpId Int
  matchUp MatchUp @relation(fields: [matchUpId], references: [id], onDelete: Cascade)
  simulation Json 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  matchupResultArticle MatchupResultArticle[]
}

model MatchupResultArticle {
  id Int @id @default(autoincrement())
  matchupResultId Int
  matchUpResult MatchUpResult @relation(fields: [matchupResultId], references: [id], onDelete: Cascade)
  matchupArticle Json 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}